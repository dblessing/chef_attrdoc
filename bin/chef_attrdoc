#!/usr/bin/env ruby
# -*- coding: utf-8 -*-

# Copyright 2013-2014, Ionuț Arțăriși <ionut@artarisi.eu>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

require 'optparse'

require 'chef_attrdoc'

options = {}

opt_parser = OptionParser.new do |opts|
  opts.banner = "Usage: chef_attrdoc [DIR] [options]\n"
  opts.banner << "DIR - cookbook directory - defaults to the current directory\n"

  options[:readme] = "README.md"
  opts.on("-r", "--readme README",
    "Readme file name; defaults to ./README.md; must be Markdown") do |readme|
    options[:readme] = readme
  end

  opts.on("-s", "--stdout",
    "Write output to stdout instead of the cookbook's README file") do |stdout|
    options[:stdout] = stdout
  end

  opts.on_tail("-d", "--debug", "Show tracebacks on errors") do |debug|
    options[:debug] = debug
  end

  opts.on_tail("-h", "--help", "Show this message") do
    puts opts
    exit
  end
end.parse!

dir_path = ["attributes"]
unless ARGV.empty?
  dir_path.unshift ARGV[0]
  unless options[:stdout]
    options[:readme] = File.join(ARGV[0], options[:readme])
  end
end

begin
  attrs = ChefAttrdoc.process_attributes dir_path
  if options[:stdout]
    puts attrs
  else
    ChefAttrdoc.write_readme options[:readme], attrs
  end
rescue Exception => e
  if options[:debug]
    raise
  else
    puts e.message
  end
end
